@{
    ViewBag.Title = "CheckAssignment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string assignmentTypeTitle = "Assignment";
    if(ViewBag.AssignmentType == 1)
    {
        assignmentTypeTitle = "Lesson";
    } else if (ViewBag.AssignmentType == 6)
    {
        assignmentTypeTitle = "P-Extra";
    }
}

<style>
    #pnl-ats {
        padding: 10px 20px;
    }
    #pnl-ats label {
        padding: 0;
        color: #fff !important;
    }
    #pnl-ats .info-box .content .text {
        color: #fff !important;
    }
    #pnl-ats label.active {
      box-shadow: 0 8px 6px -6px black;
    }
    #pnl-ats label.active .content .text {
        font-weight: bold !important; font-size: 15px;
    }
    input[name="assignmentType"] {
        display: none;
    }
</style>
<div class="right_col" role="main" ng-controller="CheckAssignmentCtrl">
    <div class="cont">
        <ol class="breadcrumb align-right">
            <li><a href="@Url.Action("Dashboard", "InstitutionTeacher")"><i class="material-icons">home</i> Home</a></li>
            <li>Check @assignmentTypeTitle</li>
        </ol>

        <div class="container-fluid">

            <div class="body">
                <div class="card">
                    <div class="header">
                        <h2>
                            Check @assignmentTypeTitle
                        </h2>
                    </div>

                    <div class="row" id="pnl-ats">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <label class="radio-inline info-box bg-pink hover-expand-effect active">
                                <input type="radio" ng-model="assignmentType" ng-change="ChangeAssignmentType(1)" name="assignmentType" id="assignmentType1" value="1"> 
                                <span class="icon">
                                    <i class="material-icons">assignment</i>
                                </span>
                                <span class="content">
                                    <span class="text text-uppercase">@assignmentTypeTitle</span>
                                    <span class="number count-to" data-from="0" data-to="125" data-speed="15" data-fresh-interval="20"></span>
                                </span>
                            </label>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <label class="radio-inline info-box bg-aqua hover-expand-effect">
                                <input type="radio" ng-model="assignmentType" ng-change="ChangeAssignmentType(2)" name="assignmentType" id="assignmentType2" value="2">
                                <span class="icon">
                                    <i class="material-icons">border_color</i>
                                </span>
                                <span class="content">
                                    <span class="text text-uppercase">HANDWRITING @assignmentTypeTitle</span>
                                    <span class="number count-to" data-from="0" data-to="125" data-speed="15" data-fresh-interval="20"></span>
                                </span>
                            </label>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <label class="radio-inline info-box bg-green hover-expand-effect">
                                <input type="radio" ng-model="assignmentType" ng-change="ChangeAssignmentType(3)" name="assignmentType" id="assignmentType3" value="3">
                                <span class="icon">
                                    <i class="material-icons">assignment</i>
                                </span>
                                <span class="content">
                                    <span class="text text-uppercase">PRONUNCIATION @assignmentTypeTitle</span>
                                    <span class="number count-to" data-from="0" data-to="125" data-speed="15" data-fresh-interval="20"></span>
                                </span>
                            </label>
                        </div>
                    </div>

                    <div class="body">
                        <form name="SearchStudent">

                            <div class="form-group">
                                <label for="heard" class="required">Select Board</label>
                                <select id="Board" name="Board" class="input-sm form-control" ng-model="Boardid" ng-options="option.Id as option.BoardName for option in BoardList" ng-change="ChangeBoard(Boardid)" ng-required="true">
                                    <option value="">-- Select Board --</option>
                                </select>
                                <p ng-show="SearchStudent.Board.$invalid && (SearchStudent.Board.$dirty || submitted ||SearchStudent.Board.$touched )" class="text-danger">Board is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="heard">Select Medium</label>
                                    <select id="Medium" name="Medium" class="input-sm form-control" ng-model="MediumId" ng-disabled="BoardId>1" ng-options="option.Id as option.Name for option in MediumList" ng-change="ChangeMedium(MediumId)" ng-required="true">
                                        <option value="">-- Select Medium --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Medium.$invalid && (SearchStudent.Medium.$dirty || submitted ||SearchStudent.Medium.$touched )" class="text-danger">Medium is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="Standard">Select Standard</label>
                                    <select id="Standard" name="Standard" class="input-sm form-control" ng-model="StandardId" ng-options="option.Id as option.StandardName for option in StandardList" ng-change="ChangeStandard(StandardId)" ng-required="true">
                                        <option value="">-- Select Standard --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Standard.$invalid && (SearchStudent.Standard.$dirty || submitted ||SearchStudent.Standard.$touched )" class="text-danger">Standard is required.</p>
                            </div>


                            <div class="form-group">
                                <div>
                                    <label for="SubjectName">Select Subject</label>
                                    <select id="Subject" name="Subject" class="input-sm form-control" ng-model="SubjectId" ng-options="option.Id as option.SubjectName for option in SubjectList" ng-change="ChangeLessons()" ng-required="true">
                                        <option value="">-- Select Subject --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Subject.$invalid && (SearchStudent.Subject.$dirty || submitted ||SearchStudent.Subject.$touched )" class="text-danger">Subject is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="Version">Select @assignmentTypeTitle</label>
                                    <select id="Assignment" name="Assignment" class="input-sm form-control" ng-model="AssignmentId" ng-options="option.AssignmentId as option.Title for option in AssignmentList" ng-change="" ng-required="true">
                                        <option value="">-- Select @assignmentTypeTitle List --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Subject.$invalid && (SearchStudent.Subject.$dirty || submitted ||SearchStudent.Subject.$touched )" class="text-danger">@assignmentTypeTitle is required.</p>
                            </div>
                        </form>
                        <br />
                        <a class="btn btn-success" ng-click="GetStudentByAssignment();" ng-disabled="savingRequest">
                            Ok
                            <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
                        </a>
                    </div>
                    <div id="panel">
                        <table class="table table-striped table-bordered" width="100%" ng-if="StudentList.length<1">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone No.</th>
                                    <th>Registration Date</th>
                                    @*<th>Expiry Date</th>
                                    <th>Status</th>*@
                                    <th></th>
                                </tr>
                            </thead>
                            <tr>
                                <td style="height: 40px; text-align: center">
                                    There are no records available.
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                @*<td></td>
                                <td></td>*@
                                <td></td>
                            </tr>
                        </table>

                        <table id="datatable1" class="table table-striped table-bordered" ng-if="StudentList.length>0">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone No.</th>
                                    @*<th>Registration Date</th>
                                    <th>Expiry Date</th>*@
                                    <th>Status</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr dir-paginate="student in StudentList |itemsPerPage:10|filter:searchText" total-items="totalcount">
                                    <td>{{student.FirstName}}</td>
                                    <td>{{student.Email}}</td>
                                    <td>{{student.MobileNo}}</td>
                                    @*<td>{{student.CreatedOn| date:'dd MMM yyyy'}}</td>
                                    <td>{{student.ExpiredOn}}</td>*@
                                    <td>{{student.IsActive==true?'Active':'DeActive'}}</td>
                                    <td><a href="@Url.Action("TestHistory", "InstitutionTeacher")?StandardId={{StandardId}}&subjectId={{SubjectId}}&AssignmentId={{AssignmentId}}&userId={{student.AccountId}}">Check Answer</a></td>
                                </tr>
                            </tbody>
                        </table>
                        <dir-pagination-controls max-size="10"
                                                 direction-links="true"
                                                 on-page-change="onPageChange(newPageNumber)"
                                                 boundary-links="true">
                        </dir-pagination-controls>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script type="text/javascript">
        $(document).ready(function () {
            $('input[name="assignmentType"]').on('change', function (e) {
                $('#pnl-ats label').removeClass('active');
                if ($(this).is(':checked')) {
                    $(this).closest('label').addClass('active');
                }
            })
        });

        myApp.controller('CheckAssignmentCtrl', function ($scope, $rootScope, $filter, NetworkService) {
            $scope.itemPerPage = 10;
            $scope.Assignment = {};
            $scope.AssignmentListAll = [];
            $scope.assignmentType = 1;
            $scope.MediumId = 1;

            NetworkService.get('PraescioCommon/GetAssignmentList?assignmentType=@ViewBag.AssignmentType').success(function (data) {
                $scope.AssignmentListAll = data.dataContent;
            });

            $scope.ChangeAssignmentType = function (id) {
                NetworkService.get('PraescioCommon/GetAssignmentList?assignmentType='+id).success(function (data) {
                    $scope.AssignmentListAll = data.dataContent;
                });
            }
            
            NetworkService.get('PraescioAdmin/GetMedium').success(function (data) {
                $scope.MediumList = data;
            });

            $scope.ChangeMedium = function (id) {
                
            }

            NetworkService.get('PraescioAdmin/GetBoardList').success(function (data) {
                $scope.BoardList = data;

                if ('@Praescio.Models.Common.ACCOUNT.AccountTypeId' == '@Convert.ToInt16(Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)') {
                    $scope.Boardid = parseInt('@Praescio.Models.Common.ACCOUNT.BoardId');
                }
            });

            $scope.StandardList = [{ Id: 1, StandardName: '5th' }, { Id: 2, StandardName: '6th' }, { Id: 3, StandardName: '7th' },
                            { Id: 4, StandardName: '8th' }, { Id: 5, StandardName: '9th' }, { Id: 6, StandardName: '10th' }]

            $scope.SubjectList = [{ Id: 1, SubjectName: 'English' }, { Id: 2, SubjectName: 'Marathi' },
                               { Id: 3, SubjectName: 'Science' }, { Id: 4, SubjectName: 'Mathematics' }];

            $scope.ChangeBoard = function (boardname) {
                //if (boardname > 1) {
                //    $scope.Student.MediumId = 1;
                //}
            }

            $scope.ChangeStandard = function (id) {
                $scope.AssignmentList = [];
                $scope.SubjectList = [];
                NetworkService.get('PraescioCommon/GetSubject?standardid=' + id + '&mediumid=' + $scope.MediumId).success(function (data) {
                    $scope.SubjectList = data;
                });
            }

            $scope.ChangeSubject = function (id) {
                //$scope.ChangeAssignmentList();
            }

            $scope.ChangeLessons = function () {
                $scope.ChangeAssignmentList();
            }

            $scope.ChangeAssignmentList = function () {
                $scope.AssignmentList = $scope.AssignmentListAll.filter(m => m.SubjectId == $scope.SubjectId && m.StandardId == $scope.StandardId && m.AssignmentTypeId == $scope.assignmentType);
            }

            $scope.ChangeAssignment = function (id) {
                NetworkService.get('PraescioCommon/GetAssignmentDetail?assignmentid='+id).success(function (data) {
                    $scope.Student = data.Student;
                    $scope.ChangeStandard(data.Student.StandardId);
                });
            }


            $scope.GetStudentByAssignment = function () {

                $scope.savingRequest = true;

                NetworkService.get('InstitutionTeacher/GetStudentByAssignment?boardid=' + $scope.Boardid + '&standardId=' + $scope.StandardId + '&subjectId=' + $scope.SubjectId + '&assignmentId=' + $scope.AssignmentId, $scope.Question).success(function (data) {
                    $scope.StudentList = data.studentList;
                    $scope.totalcount = data.TotalRecord;

                    $scope.savingRequest = false;

                }).error(function (data) {
                    $scope.savingRequest = false;
                    swal({
                        title: data.Message,
                        text: "Press Ok to Continue.",
                        type: "error",
                        confirmButtonColor: "red",
                        showCancelButton: false,
                    });
                });
            }

            $scope.onPageChange = function (pageno) {
                var url = '&pageNo=' + pageno + '&itemPerPage=' + $scope.itemPerPage;

                NetworkService.get('InstitutionTeacher/GetStudentByAssignment?standardId=' + $scope.StandardId + '&subjectId=' + $scope.SubjectId + '&assignmentId=' + $scope.AssignmentId + url, $scope.Question).success(function (data) {
                    $scope.StudentList = data.studentList;
                    $scope.totalcount = data.TotalRecord;
                });
            }

        });
    </script>
}


