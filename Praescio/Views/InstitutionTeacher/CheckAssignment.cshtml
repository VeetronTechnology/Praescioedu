@{
    ViewBag.Title = "CheckAssignment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string assignmentTypeTitle = "Assignment";
    if(ViewBag.AssignmentType == 1)
    {
      assignmentTypeTitle = "Lesson";
    } else if (ViewBag.AssignmentType == 6)
    {
      assignmentTypeTitle = "P-Extra";
    }

    if (Praescio.Models.Common.ACCOUNT.AccountTypeId == ((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher))
    {
      assignmentTypeTitle = (assignmentTypeTitle == "Lesson" ? "Assignment" : assignmentTypeTitle);
    }
}

<style>
    #pnl-ats {
        padding: 10px 20px;
    }
    #pnl-ats label {
        padding: 0;
        color: #fff !important;
    }
    #pnl-ats .info-box .content .text {
        color: #fff !important;
    }
    #pnl-ats label.active {
      box-shadow: 0 8px 6px -6px black;
    }
    #pnl-ats label.active .content .text {
        font-weight: bold !important; font-size: 15px;
    }
    input[name="assignmentType"] {
        display: none;
    }
</style>
<div class="right_col" role="main" ng-controller="CheckAssignmentCtrl">
    <div class="cont">
        <ol class="breadcrumb align-right">
            <li><a href="@Url.Action("Dashboard", "InstitutionTeacher")"><i class="material-icons">home</i> Home</a></li>
            <li>Check @assignmentTypeTitle</li>
        </ol>

        <div class="container-fluid">

            <div class="body">
                <div class="card">
                    <div class="header">
                        <h2>
                            Check @assignmentTypeTitle
                        </h2>
                    </div>

                    <div class="row" id="pnl-ats">
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <label class="radio-inline info-box bg-pink hover-expand-effect active">
                                <input type="radio" ng-model="assignmentType" ng-change="ChangeAssignmentType(@((int)Praescio.BusinessEntities.Common.AssignmentType.PraescioLesson))" name="assignmentType" id="assignmentType1" value="@(ViewBag.AssignmentType)"> 
                                @*<span class="icon">
                                    <i class="material-icons">assignment</i>
                                </span>*@
                                <span class="content">
                                    <span class="text text-uppercase">@assignmentTypeTitle</span>
                                    <span class="number count-to" data-from="0" data-to="125" data-speed="15" data-fresh-interval="20"></span>
                                </span>
                            </label>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <label class="radio-inline info-box bg-aqua hover-expand-effect">
                                <input type="radio" ng-model="assignmentType" ng-change="ChangeAssignmentType(@((int)Praescio.BusinessEntities.Common.AssignmentType.Handwriting))" name="assignmentType" id="assignmentType2" value="@((int)Praescio.BusinessEntities.Common.AssignmentType.Handwriting)">
                                @*<span class="icon">
                                    <i class="material-icons">border_color</i>
                                </span>*@
                                <span class="content">
                                    <span class="text text-uppercase">HANDWRITING @assignmentTypeTitle</span>
                                    <span class="number count-to" data-from="0" data-to="125" data-speed="15" data-fresh-interval="20"></span>
                                </span>
                            </label>
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                            <label class="radio-inline info-box bg-green hover-expand-effect">
                                <input type="radio" ng-model="assignmentType" ng-change="ChangeAssignmentType(@((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation))" name="assignmentType" id="assignmentType3" value="@((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation)">
                                @*<span class="icon">
                                    <i class="material-icons">assignment</i>
                                </span>*@
                                <span class="content">
                                    <span class="text text-uppercase">PRONUNCIATION @assignmentTypeTitle</span>
                                    <span class="number count-to" data-from="0" data-to="125" data-speed="15" data-fresh-interval="20"></span>
                                </span>
                            </label>
                        </div>
                    </div>

                    <div class="body">
                        <form name="SearchStudent">

                            <div class="form-group">
                                <label for="heard" class="required">Select Board</label>
                                <select id="Board" name="Board" class="input-sm form-control" ng-model="BoardId" ng-options="option.Id as option.BoardName for option in BoardList" ng-change="ChangeBoard(BoardId)" ng-required="true">
                                    <option value="">-- Select Board --</option>
                                </select>
                                <p ng-show="SearchStudent.Board.$invalid && (SearchStudent.Board.$dirty || submitted ||SearchStudent.Board.$touched )" class="text-danger">Board is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="heard">Select Medium</label>
                                    <select id="Medium" name="Medium" class="input-sm form-control" ng-model="MediumId" ng-disabled="BoardId>1" ng-options="option.Id as option.Name for option in MediumList" ng-change="ChangeMedium(MediumId)" ng-required="true">
                                        <option value="">-- Select Medium --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Medium.$invalid && (SearchStudent.Medium.$dirty || submitted ||SearchStudent.Medium.$touched )" class="text-danger">Medium is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="Standard">Select Standard</label>
                                    <select id="Standard" name="Standard" class="input-sm form-control" ng-model="StandardId" ng-options="option.Id as option.StandardName for option in StandardList" ng-change="ChangeStandard(StandardId)" ng-required="true">
                                        <option value="">-- Select Standard --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Standard.$invalid && (SearchStudent.Standard.$dirty || submitted ||SearchStudent.Standard.$touched )" class="text-danger">Standard is required.</p>
                            </div>


                            <div class="form-group" ng-hide="assignmentType == @((int)Praescio.BusinessEntities.Common.AssignmentType.Handwriting) || assignmentType == @((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation)">
                                <div>
                                    <label for="SubjectName">Select Subject</label>
                                    <select id="Subject" name="Subject" class="input-sm form-control" ng-model="SubjectId" ng-options="option.Id as option.SubjectName for option in SubjectList" ng-change="ChangeLessons()" ng-required="true">
                                        <option value="">-- Select Subject --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Subject.$invalid && (SearchStudent.Subject.$dirty || submitted ||SearchStudent.Subject.$touched )" class="text-danger">Subject is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="Version">Select @assignmentTypeTitle</label>
                                    <select id="Assignment" name="Assignment" class="input-sm form-control" ng-model="AssignmentId" ng-options="option.AssignmentId as option.Title for option in AssignmentList" ng-change="" ng-required="true">
                                        <option value="">-- Select @assignmentTypeTitle --</option>
                                    </select>
                                </div>
                                <p ng-show="SearchStudent.Subject.$invalid && (SearchStudent.Subject.$dirty || submitted ||SearchStudent.Subject.$touched )" class="text-danger">@assignmentTypeTitle is required.</p>
                            </div>
                        </form>
                        <br />
                        <a class="btn btn-success" ng-click="GetStudentByAssignment();" ng-disabled="savingRequest">
                            Ok
                            <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
                        </a>
                    </div>
                    <div id="panel">
                        <table class="table table-striped table-bordered" width="100%" ng-if="StudentList.length<1">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone No.</th>
                                    <th>Registration Date</th>
                                    @*<th>Expiry Date</th>
                                    <th>Status</th>*@
                                    <th></th>
                                </tr>
                            </thead>
                            <tr>
                                <td style="height: 40px; text-align: center">
                                    There are no records available.
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                @*<td></td>
                                <td></td>*@
                                <td></td>
                            </tr>
                        </table>

                        <table id="datatable1" class="table table-striped table-bordered" ng-if="StudentList.length>0">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Phone No.</th>
                                    @*<th>Registration Date</th>
                                    <th>Expiry Date</th>*@
                                    @*<th>Status</th>*@
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr dir-paginate="student in StudentList |itemsPerPage:10|filter:searchText" total-items="totalcount">
                                    <td>{{student.Student.FirstName}}</td>
                                    <td>{{student.Student.Email}}</td>
                                    <td>{{student.Student.MobileNo}}</td>
                                    @*<td>{{student.CreatedOn| date:'dd MMM yyyy'}}</td>
                                    <td>{{student.ExpiredOn}}</td>*@
                                    @*<td>{{student.Student.IsActive==true?'Active':'DeActive'}}</td>*@
                                    <td>
                                      <a ng-if="student.Assesment.StatusId == @((int)Praescio.BusinessEntities.Common.AssignmentStatus.SubmittedByStudent)" ng-href="~/{{getCheckAnswerURL(student.Student)}}">Check Answer</a>
                                      <span ng-if="student.Assesment.StatusId >= @((int)Praescio.BusinessEntities.Common.AssignmentStatus.CheckedByTeacher)" class="text-green">
                                        <a href="#" class="btn btn-info btn-xs " ng-click="setModalViewResult(student.Assesment)">View Result</a>
                                      </span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <dir-pagination-controls max-size="10"
                                                 direction-links="true"
                                                 on-page-change="onPageChange(newPageNumber)"
                                                 boundary-links="true">
                        </dir-pagination-controls>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script type="text/javascript">
        $(document).ready(function () {
          $('input[name="assignmentType"]').on('change',
            function (e) {
              $('#pnl-ats label').removeClass('active');
              if ($(this).is(':checked')) {
                $(this).closest('label').addClass('active');
              }
            });
        });

        myApp.controller('CheckAssignmentCtrl', function ($scope, $rootScope, $filter, NetworkService) {
            $scope.itemPerPage = 10;
            $scope.Assignment = {};
            //$scope.AssignmentListAll = [];
            $scope.assignmentType = @ViewBag.AssignmentType;
            $scope.MediumId = 1;

            @*NetworkService.get('PraescioCommon/GetAssignmentList?assignmentType=@ViewBag.AssignmentType').success(function (data) {
                $scope.AssignmentListAll = data.dataContent;
            });*@

            $scope.ChangeAssignmentType = function (id) {
                //NetworkService.get('PraescioCommon/GetAssignmentList?assignmentType='+id).success(function (data) {
                //    $scope.AssignmentListAll = data.dataContent;
                //});

                $scope.ChangeAssignmentList();
            }

            $scope.getCheckAnswerURL = function (student) {
              //console.log('$scope.AssignmentType', $scope.assignmentType, @((int)Praescio.BusinessEntities.Common.AssignmentType.Handwriting), @((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation))
              return ($scope.assignmentType == @((int)Praescio.BusinessEntities.Common.AssignmentType.Handwriting) || $scope.assignmentType == @((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation) ? 'Praescio/TestHKP' : 'InstitutionTeacher/TestHistory') + '?StandardId=' + $scope.StandardId + '&subjectId=' + $scope.SubjectId + '&AssignmentId=' + $scope.AssignmentId + '&userId=' + student.AccountId;
            }

            $scope.StandardList = [{ Id: 1, StandardName: '5th' }, { Id: 2, StandardName: '6th' }, { Id: 3, StandardName: '7th' },
                            { Id: 4, StandardName: '8th' }, { Id: 5, StandardName: '9th' }, { Id: 6, StandardName: '10th' }]

            $scope.SubjectList = [{ Id: 1, SubjectName: 'English' }, { Id: 2, SubjectName: 'Marathi' },
                               { Id: 3, SubjectName: 'Science' }, { Id: 4, SubjectName: 'Mathematics' }];

            $scope.TeacherMappingStandard = [];
            $scope.TeacherSubjects = [];
            if (
              "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)"
              || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
            )
            {
              NetworkService.get('PraescioCommon/GetUserRegisterationDetail?accountId=@Praescio.Models.Common.ACCOUNT.AccountId').success(function (data) {
                $scope.TeacherMappingStandard = data.teacherMappingStandard;
                var standards = [];

                $scope.TeacherMappingStandard.forEach(function (k) {
                  standards.push(k.StandardId);
                  k.SubjectId.forEach(function (k2) {
                    $scope.TeacherSubjects.push(k2);
                  });
                });

                $scope.StandardList = $scope.StandardList.filter(m => standards.indexOf(m.Id) > -1);
              });
            }

            NetworkService.get('PraescioAdmin/GetBoardList').success(function (data) {
              if ("@((int)Praescio.BusinessEntities.Common.AssignmentType.PExtra)" == "@ViewBag.AssignmentType") {
                $scope.BoardList = data.filter(m => m.Id == 4);
              } else {
                $scope.BoardList = data.filter(m => m.Id != 4);
              }

              if (
                "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)"
                || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
              )
              {
                $scope.BoardList = $scope.BoardList.filter(m => m.Id == "@Praescio.Models.Common.ACCOUNT.BoardId");
                $scope.BoardId = parseInt('@Praescio.Models.Common.ACCOUNT.BoardId');
              }

              $scope.BoardId = $scope.BoardList[0].Id;
              $scope.ChangeBoard($scope.Assignment.BoardId);
            });

            $scope.ChangeBoard = function (boardname) {
              console.log('boardname', boardname)
                if (boardname > 1) {
                    $scope.MediumId = 1;
                }
            }

            NetworkService.get('PraescioAdmin/GetMedium').success(function (data) {
              @*$scope.MediumList = data.filter(m => m.Id == "@(Praescio.Models.Common.ACCOUNT.MediumId != null ? Praescio.Models.Common.ACCOUNT.MediumId : 1)");*@
              if ("@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Student)"
                || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualStudent)"
                || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
                || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)")
              {
                var usrMediumId = "@Praescio.Models.Common.ACCOUNT.MediumId";
                if (usrMediumId == "" || usrMediumId == null) {
                  usrMediumId = 1;
                }
                $scope.MediumList = data.filter(m => m.Id == usrMediumId);
              } else {
                $scope.MediumList = data;
              }

              $scope.MediumId = $scope.MediumList[0].Id;
            });

            $scope.ChangeMedium = function (id) {

            }

            $scope.ChangeStandard = function (id) {
                $scope.AssignmentList = [];
                $scope.SubjectList = [];
                NetworkService.get('PraescioCommon/GetSubjectSingleMedium?standardid=' + id + '&mediumid=' + $scope.MediumId + '&boardid=' + $scope.BoardId).success(function (data) {
                  $scope.SubjectList = data;

                  if (
                    "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)"
                    || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
                  )
                  {
                    $scope.SubjectList = $scope.SubjectList.filter(m => $scope.TeacherSubjects.indexOf(m.Id) > -1);
                  }

                  $scope.ChangeAssignmentList();
                });
              }

            $scope.ChangeSubject = function (id) {
                //$scope.ChangeAssignmentList();
            }

            $scope.ChangeLessons = function () {
                $scope.ChangeAssignmentList();
            }

            $scope.ChangeAssignmentList = function () {
              //$scope.AssignmentList = $scope.AssignmentListAll.filter(m => m.SubjectId == $scope.SubjectId && m.StandardId == $scope.StandardId && m.AssignmentTypeId == $scope.assignmentType);

              var url = 'pageNo=1&itemPerPage=9999&AssignmentType=' + $scope.assignmentType + '&HidePublished=false';
              url += '&BoardId=' + ($scope.BoardId == '' || $scope.BoardId == undefined ? 0 : $scope.BoardId) +
                '&MediumId=' + ($scope.MediumId == '' || $scope.MediumId == undefined ? 0 : $scope.MediumId) +
                '&StandardId=' + ($scope.StandardId == '' || $scope.StandardId == undefined ? 0 : $scope.StandardId) +
                '&SubjectId=' + ($scope.SubjectId == '' || $scope.SubjectId == undefined ? 0 : $scope.SubjectId) +
                '&AttemptedOnly=false';
                NetworkService.get('PraescioCommon/GetAssignmentListV2?' + url).success(function (data) {
                    $scope.AssignmentList = data.dataContent;
                    //$scope.totalcount = data.totalRecord;
                });
            }

            $scope.ChangeAssignment = function (id) {
                NetworkService.get('PraescioCommon/GetAssignmentDetail?assignmentid='+id).success(function (data) {
                    $scope.Student = data.Student;
                    $scope.ChangeStandard(data.Student.StandardId);
                });
            }


            $scope.GetStudentByAssignment = function () {

                $scope.savingRequest = true;

                var url = '?boardid=' + ($scope.BoardId == '' || $scope.BoardId == undefined ? 0 : $scope.BoardId) +
                //'&MediumId=' + ($scope.MediumId == '' || $scope.MediumId == undefined ? 0 : $scope.MediumId) +
                '&standardId=' + ($scope.StandardId == '' || $scope.StandardId == undefined ? 0 : $scope.StandardId) +
                  '&subjectId=' + ($scope.SubjectId == '' || $scope.SubjectId == undefined ? 0 : $scope.SubjectId) +
                  '&assignmentId=' + $scope.AssignmentId;

                NetworkService.get('InstitutionTeacher/GetStudentByAssignment' + url, $scope.Question).success(function (data) {
                    $scope.StudentList = data.studentList;
                    $scope.totalcount = data.TotalRecord;

                    $scope.savingRequest = false;

                }).error(function (data) {
                    $scope.savingRequest = false;
                    swal({
                        title: data.Message,
                        text: "Press Ok to Continue.",
                        type: "error",
                        confirmButtonColor: "red",
                        showCancelButton: false,
                    });
                });
            }

            $scope.onPageChange = function (pageno) {
                var url = '&pageNo=' + pageno + '&itemPerPage=' + $scope.itemPerPage;

                NetworkService.get('InstitutionTeacher/GetStudentByAssignment?standardId=' + $scope.StandardId + '&subjectId=' + $scope.SubjectId + '&assignmentId=' + $scope.AssignmentId + url, $scope.Question).success(function (data) {
                    $scope.StudentList = data.studentList;
                    $scope.totalcount = data.TotalRecord;
                });
            }

            $scope.setModalViewResult = function (assignment) {
              swal({
                title: 'View Result',
                html: true,
                text: '<table class="table table-bordered table-stripped text-left"><tbody>' +
                '<tr><td><strong>Assignment Title</strong></td><td>' + assignment.Assignment.Title + '</td></tr>' +
                //'<tr><td><strong>Assignment Description</strong></td><td>' + assignment.Assignment.Description + '</td></tr>' +
                '<tr><td><strong>Marks Scored</strong></td><td>' + assignment.TotalMarksScored + '</td></tr>' +
                '<tr><td><strong>Teacher Name</strong></td><td>' + (assignment.Assignment.Account.FirstName + ' ' + assignment.Assignment.Account.LastName) + '</td></tr>' +
                '</tbody></table>',
                //type: "info",
                confirmButtonColor: "info",
                showCancelButton: false
              });
            }

        });
    </script>
}


