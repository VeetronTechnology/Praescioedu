@{
    ViewBag.Title = "TestHistory";
}

<!-- page content -->
<div class="right_col" role="main" ng-controller="TestHistoryCtrl" ng-init="LoadContent();">
  <div class="">
    <div class="page-title">
      <div class="title_left">
        <h3>Dashboard</h3>
      </div>
      <div class="title_right">
        <div class="col-md-8 col-sm-8 col-xs-12 form-group pull-right top_search">
          <div class="input-group">
            <ol class="breadcrumb">
              <li><a href="@Url.Action(" dashboard", "PraescioAdmin" )"><i class="fa fa-dashboard"></i> Dashboard</a></li>
              <li><a href="#"><i class="fa fa-list"></i> View Lessons</a></li>
              <li class="active">List Of Lessons</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
      <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
          <div class="x_title">
            <h2>List Of Lessons </h2>
            <div class="clearfix"></div>
          </div>

          @if (Praescio.Models.Common.ACCOUNT.AccountTypeId == (int)Praescio.BusinessEntities.Common.AccountType.Teacher || Praescio.Models.Common.ACCOUNT.AccountTypeId == (int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher || Praescio.Models.Common.ACCOUNT.AccountTypeId == (int)Praescio.BusinessEntities.Common.AccountType.Admin || Praescio.Models.Common.ACCOUNT.AccountTypeId == (int)Praescio.BusinessEntities.Common.AccountType.SuperAdmin)
          {
              <a class="btn btn-success" style="float:left" ng-click="ChangedAssignmentStatus();" ng-if="UserAssessmentDetail.StatusId==@Convert.ToInt16(@Praescio.BusinessEntities.Common.AssignmentStatus.CheckedByTeacher)" ng-disabled="savingRequest">
                Send to Student
                <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
              </a>
          }

          <div class="x_content">
            <div class="body">
              <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                  <font style="color:#575252"><b>{{Assignment.Assignment.Title}}</b></font>
                  <p><label>Question</label></p>
                  <div id="AssignmentPDF"></div>
                </div>
              </div>
              <form id="AssignmentForm" name="AssignmentForm" data-parsley-validate>
                <div class="row">
                  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <p><label>Answer</label></p>
                    <div id="AssignmentPDF2"></div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div class="form-group">
                      <div class="">
                        <label for="TotalMarksScored">Total Marks Scored</label>
                        <input id="TotalMarksScored" ng-model="TotalMarksScored" name="TotalMarksScored" max="100" min="0" required type="number" class="text-right" />
                      </div>
                      <p ng-show="AssignmentForm.TotalMarksScored.$invalid && (AssignmentForm.TotalMarksScored.$dirty || submitted ||AssignmentForm.TotalMarksScored.$touched )" class="text-danger">Total Marks Scored is required.</p>
                    </div>

                    <div class="form-group">
                      <button type="button" class="btn btn-primary waves-effect" ng-click="AttemptAssignment()" ng-disabled="savingRequest">
                        SUBMIT
                        <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
                      </button>
                    </div>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts{

  <script type="text/javascript">
    myApp.controller('TestHistoryCtrl', function ($scope, $rootScope, $filter, NetworkService, $timeout) {
      $scope.assignmentTitle = "Handwriting";
            var formdata = new FormData();

            $scope.TitleName = 'Test History'
            $scope.Assignment = {};
      $scope.baseUrl = "@(Request.Url.Scheme + "://" + Request.Url.Authority + Request.ApplicationPath.TrimEnd('/') + "/")"; // $location.protocol() + "://" + location.host
            $scope.LoadContent = function () {
              NetworkService.get('PraescioCommon/GetAssignmentHKP?assignmentId=@ViewBag.Assignmentid&userId=@ViewBag.UserId').success(function (data) {
                console.log('GetAssignmentHKP data', data)
                $scope.Assignment = data.dataContent;

                $scope.assignmentTitle = $scope.Assignment.Assignment.AssignmentType.AssignmentTypeName;
                console.log('$scope.Assignment.Assignment.UploadFileSrc', $scope.Assignment.Assignment.AssignmentTypeId, parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation)"), $scope.Assignment.Assignment.UploadFileSrc, $scope.Assignment.AssignmentHKPStudent.UploadFileSrc)
                if ($scope.Assignment.Assignment.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation)")) {

                  if ($scope.Assignment.Assignment.UploadFileSrc != "" && $scope.Assignment.Assignment.UploadFileSrc != null) {
                    $('#AssignmentPDF').append('<embed id="pdfFile" type="application/pdf" src="@Url.Content("~/")' + $scope.Assignment.Assignment.UploadFileSrc + '" height="500px" width="80%" internalinstanceid="37" title=""><br><br><br>')
                  }
                  if ($scope.Assignment.AssignmentHKPStudent.UploadFileSrc != "" && $scope.Assignment.AssignmentHKPStudent.UploadFileSrc != null) {
                    $('#AssignmentPDF2').append('<iframe ng-src="' + encodeURI($scope.baseUrl + $scope.Assignment.AssignmentHKPStudent.UploadFileSrc) + '" style="border: 0;min-width: 200px;min-height: 200px"></iframe><br>')
                    $('#AssignmentPDF2').append('<br/><a target="_blank" href="' + encodeURI($scope.baseUrl + $scope.Assignment.AssignmentHKPStudent.UploadFileSrc) + '" style="border: 0;min-width: 200px;min-height: 200px">Download</a><br>')
                  }
                } else {
                  if ($scope.Assignment.Assignment.UploadFileSrc != "" && $scope.Assignment.Assignment.UploadFileSrc != null) {
                    $('#AssignmentPDF').append('<embed id="pdfFile" type="application/pdf" src="@Url.Content("~/")' + $scope.Assignment.Assignment.UploadFileSrc + '" height="500px" width="80%" internalinstanceid="37" title=""><br><br><br>')
                  }
                  if ($scope.Assignment.AssignmentHKPStudent.UploadFileSrc != "" && $scope.Assignment.AssignmentHKPStudent.UploadFileSrc != null) {
                    $('#AssignmentPDF2').append('<embed id="pdfFile2" type="application/pdf" src="@Url.Content("~/")' + $scope.Assignment.AssignmentHKPStudent.UploadFileSrc + '" height="500px" width="80%" internalinstanceid="37" title=""><br><br><br>')
                  }
                }

              });
            }

            $scope.AttemptAssignment = function () {

                if (!$scope.AssignmentForm.$valid) {
                  $scope.submitted = true;
                  return;
                }

                $scope.savingRequest = true;

                var frmData = {
                  Id: $scope.Assignment.AssignmentHKPStudent.Id,
                  AssignmentId: $scope.Assignment.Assignment.AssignmentId,
                  AssignmentHKPMappingId: $scope.Assignment.AssignmentHKPStudent.AssignmentHKPMappingId,
                  StudentId: $scope.Assignment.Student.AccountId,
                  UploadFileSrc: $scope.Assignment.UploadFileSrc,
                  TotalMarksScored: $scope.TotalMarksScored
                }

                var data = JSON.stringify(frmData);
                console.log('$scope.Assignment', $scope.Assignment, data);
                NetworkService.insert('PraescioCommon/AssignmentHKPCheck', data).success(function (data) {
                    $scope.savingRequest = false;
                    $('#mdlAssignmentAttempt').modal('hide');
                    if(data.success) {
                        swal({
                          title: $scope.assignmentTitle + " has been checked successfully !!!",
                            text: "Press Ok to Continue.",
                            type: "success",
                            confirmButtonColor: "green",
                            showCancelButton: false,
                        },
                        function (isConfirm) {
                            if (isConfirm) {
                              window.location.href = '@Url.Content("~/InstitutionTeacher/CheckAssignment?assignmentType=")' + $scope.Assignment.Assignment.AssignmentType.AssignmentTypeId;
                            }
                        });
                    } else {
                        swal({
                            title: data.Message,
                            text: "Press Ok to Continue.",
                            type: "error",
                            confirmButtonColor: "red",
                            showCancelButton: false
                        });
                    }

                    $scope.LoadContent();
                }).error(function (data, status) {
                    $scope.savingRequest = false;
                    swal({
                        title: data.Message,
                        text: "Press Ok to Continue.",
                        type: "error",
                        confirmButtonColor: "red",
                        showCancelButton: false
                    });
                });
            }

        });
  </script>
}
