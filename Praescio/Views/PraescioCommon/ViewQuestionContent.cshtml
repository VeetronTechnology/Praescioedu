@{
    ViewBag.Title = "TeacherListFullVersion";
    var ContentString = ViewBag.CategoryTypeId == (int)Praescio.BusinessEntities.Common.CategoryType.Synonyms ? "Synonyms" : "Antonyms";
}

<!-- page content -->
<div class="right_col" role="main" ng-controller="ViewContentCtrl">
    <div class="">
        <div class="page-title">
            <div class="title_left">
                <h3>Dashboard</h3>
            </div>
            <div class="title_right">
                <div class="col-md-6 col-sm-6 col-xs-12 form-group pull-right top_search">
                    <div class="input-group">
                        <ol class="breadcrumb">
                            <li><a href="@Url.Action("index", "Home")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                            <li class="active">View @ContentString</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="x_panel">
                    <div class="row x_title">
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <h2 class="text-left">List of @ContentString</h2>
                        </div>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <label class="text-left" style="float:right;padding-right:53px;white-space:nowrap;">
                                Search:
                                <input  type="text" class="form-control" ng-model="SearchText" ng-keyup="SearchText.length>3 ||SearchText.length==0?LoadContent():'';" style="display:inline; width:150px;float:right;" placeholder="Search" name="Search" value="" />
                            </label>
                        </div>
                    </div>
                    <div class="x_content">
                        <a ng-click="ShowHide()" href="#" class="btn btn-primary uploadbtn">Edit</a>

                        <table id="datatable2" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th ng-show="IsVisible"></th>
                                    <th>Word</th>
                                    @if (ContentString == "Antonyms")
                                    {
                                      <th>Antonyms</th>
                                    }
                                    else
                                    {
                                      <th>Synonyms</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                <tr dir-paginate="content in ContentList |itemsPerPage:20|filter:searchText" total-items="totalcount">
                                    <td ng-show="IsVisible"><input type="checkbox" ng-model="content.Checked" style="cursor:pointer;" /></td>
                                    <td>{{content.ContentOption}}</td>
                                    <td>{{content.ContentAnswer}}</td>
                                    @*<td>{{content.CreatedAccount.FirstName}}</td>*@
                                </tr>
                            </tbody>
                        </table>
                        <dir-pagination-controls max-size="10"
                                                 direction-links="true"
                                                 on-page-change="onPageChange(newPageNumber)"
                                                 boundary-links="true">
                        </dir-pagination-controls>

                        <div ng-show="IsVisible">

                          <div class="form-group">
                            <label for="Version">Select Type</label>
                            <select id="Assignment" name="Assignment" class="input-sm form-control" ng-model="AssignmentTypeId" ng-options="option.AssignmentTypeId as option.AssignmentTypeName for option in AssignmentTypeList" ng-change="GetAssignmentByType(AssignmentTypeId)" ng-required="true">
                              <option value="">-- Select Type--</option>
                            </select>
                          </div>

                            <div class="form-group" >
                                <label for="heard" class="required">Select Board</label>
                                <select id="Board" name="Board" ng-change="ChangeBoard(Assignment.BoardId)" class="input-sm form-control" ng-model="Assignment.BoardId" ng-options="option.Id as option.BoardName for option in BoardList" ng-required="true">
                                    <option value="">-- Select Board --</option>
                                </select>
                                <p ng-show="AssignmentForm.Board.$invalid && (AssignmentForm.Board.$dirty || submitted ||AssignmentForm.Board.$touched )" class="text-danger">Board is required.</p>
                            </div>

                            <div class="form-group" >
                                <div>
                                    <label for="heard">Select Medium</label>
                                    <select id="Medium" name="Medium" class="input-sm form-control" ng-model="Assignment.MediumId" ng-disabled="Assignment.BoardId>1" ng-options="option.Id as option.Name for option in MediumList" ng-change="ChangeMedium(Assignment.MediumId)" ng-required="true">
                                        <option value="">-- Select Medium --</option>
                                    </select>
                                </div>
                                <p ng-show="AssignmentForm.Medium.$invalid && (AssignmentForm.Medium.$dirty || submitted ||AssignmentForm.Medium.$touched )" class="text-danger">Medium is required.</p>
                            </div>

                            <div class="form-group" >
                                <div>
                                    <label for="heard">Select Standard</label>
                                    <select id="Standard" name="Standard" class="input-sm form-control" ng-model="Assignment.StandardId" ng-options="option.Id as option.StandardName for option in StandardList" ng-change="ChangeStandard(Assignment.StandardId)" ng-required="true">
                                        <option value="">-- Select Standard --</option>
                                    </select>
                                </div>
                                <p ng-show="AssignmentForm.Standard.$invalid && (AssignmentForm.Standard.$dirty || submitted ||AssignmentForm.Standard.$touched )" class="text-danger">Standard is required.</p>
                            </div>

                            <div class="form-group">
                                <div>
                                    <label for="heard">Select Subject</label>
                                    <select id="Subject" name="Subject" class="input-sm form-control" ng-model="Assignment.SubjectId" ng-options="option.Id as option.SubjectName for option in SubjectList" ng-change="ChangeSubject(Assignment.SubjectId)" ng-required="true">
                                        <option value="">-- Select Subject --</option>
                                    </select>
                                </div>
                            </div>
                          
                            <div class="form-group" >
                                <label for="Version">Select Assignment</label>
                                <select id="Assignment" name="Assignment" class="input-sm form-control" ng-model="AssignmentId" ng-options="option.AssignmentId as option.Title for option in AssignmentList" ng-change="" ng-required="true">
                                    <option value="">-- Select Assignment --</option>
                                </select>
                            </div>
                        </div>
                        <span class="btn btn-primary" ng-show="IsVisible" ng-click="SaveQuestion()" ng-disabled="savingRequest">
                            Save
                            <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
                        </span>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{

    <script type="text/javascript">

        myApp.controller('ViewContentCtrl', function ($scope, $rootScope, $filter, NetworkService) {
            $scope.totalcount = 0;
            $scope.SearchText = "";

            $scope.itemsPerPage = 20;

            $scope.Assignment = {};
            $scope.AssignmentListAll = [];

            $scope.Teacher = {};
            $scope.TitleName = 'List of Content';

             $scope.LoadContent = function () {
                 NetworkService.get('PraescioCommon/GetQuestionContent?CategoryTypeId=@ViewBag.CategoryTypeId&isIndividual=@ViewBag.IsIndividual&version=@ViewBag.Version&institutionId=@ViewBag.InstitutionId&searchText=' + $scope.SearchText).success(function (data) {
                     $scope.ContentList = data.contentData;
                     console.log('$scope.ContentList', $scope.ContentList);
                    $scope.totalcount = data.TotalRecord;
                });
            };

            NetworkService.get('PraescioCommon/GetQuestionContent?CategoryTypeId=@ViewBag.CategoryTypeId').success(function (data) {
                $scope.ContentList = data.contentData;
                $scope.totalcount = data.totalRecord;
            });

             $scope.StandardList = [{ Id: 1, StandardName: '5th' }, { Id: 2, StandardName: '6th' }, { Id: 3, StandardName: '7th' },
            { Id: 4, StandardName: '8th' }, { Id: 5, StandardName: '9th' }, { Id: 6, StandardName: '10th' }]

            NetworkService.get('PraescioAdmin/GetBoardList').success(function (data) {
                if ("@((int)Praescio.BusinessEntities.Common.AssignmentType.PExtra)" == "@ViewBag.AssignmentType") {
                  $scope.BoardList = data.filter(m => m.Id == 4);
                } else {
                  $scope.BoardList = data;
                }
                $scope.Assignment.BoardId = $scope.BoardList[0].Id;
                $scope.ChangeBoard($scope.Assignment.BoardId);
            });

            $scope.GetAssignmentByType = function (AssignmentTypeId) {
              $scope.AssignmentTypeId = AssignmentTypeId;
              $scope.ChangeAssignmentList();

              NetworkService.get('PraescioAdmin/GetBoardList').success(function (data) {
                if ($scope.AssignmentTypeId == "@(Convert.ToInt16(Praescio.BusinessEntities.Common.AssignmentType.PExtra))") {
                  // Show only PE Board for PExtra
                  // 4 => PE Board
                  $scope.BoardList = data.filter(m => m.Id == 4);
                  //$scope.Assignment.BoardId = 4;
                  //$scope.ChangeBoard(4);
                } else {
                  $scope.BoardList = data.filter(m => m.Id != 4);
                }

                if (
                  "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Admin)"
                )
                {
                  $scope.BoardList = $scope.BoardList.filter(m => m.Id == "@Praescio.Models.Common.ACCOUNT.BoardId");
                }

                $scope.Assignment.BoardId = $scope.BoardList[0].Id;
                $scope.ChangeBoard($scope.Assignment.BoardId);
              });
            }

            NetworkService.get('PraescioAdmin/GetMedium').success(function (data) {
                if ("@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Student)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualStudent)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Admin)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)")
                {
                  var usrMediumId = "@Praescio.Models.Common.ACCOUNT.MediumId";
                  if (usrMediumId == "" || usrMediumId == null) {
                    usrMediumId = 1;
                  }
                  $scope.MediumList = data.filter(m => m.Id == usrMediumId);
                } else {
                  $scope.MediumList = data;
                }

                $scope.Assignment.MediumId = $scope.MediumList[0].Id;

            });
            $scope.ChangeBoard = function (boardname) {
                if (boardname > 1) {
                    $scope.Assignment.MediumId = 1;
                }
                $scope.SubjectList = [];
                $scope.Assignment.StandardId = '';
            }

            $scope.ChangeStandard = function (id) {
              NetworkService.get('PraescioCommon/GetSubjectSingleMedium?standardid=' + id + '&mediumid=' + $scope.Assignment.MediumId + '&boardid=' + $scope.Assignment.BoardId).success(function (data) {
                $scope.SubjectList = data;

                if (
                  "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)"
                  || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)"
                )
                {
                  $scope.SubjectList = $scope.SubjectList.filter(m => $scope.TeacherSubjects.indexOf(m.Id) > -1);
                }
              });
            }

            $scope.ChangeMedium = function (MediumId) {
              $scope.SubjectList = [];
              $scope.Assignment.StandardId = '';
            }

            NetworkService.get('PraescioCommon/GetAssignmentTypeList').success(function (data) {
              $scope.AssignmentTypeList = data.filter(m => m.AssignmentTypeId != @((int)Praescio.BusinessEntities.Common.AssignmentType.Handwriting) && m.AssignmentTypeId != @((int)Praescio.BusinessEntities.Common.AssignmentType.Pronounciation));
              if (data) {
                if ("@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.SuperAdmin)") {
                  $scope.AssignmentTypeList = data.filter(m => m.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.PraescioLesson)") || m.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.PExtra)"));
                } else {
                  //$scope.AssignmentTypeList = data.filter(m => m.AssignmentTypeName.toLowerCase() == 'praescio lesson' || m.AssignmentTypeName.toLowerCase() == 'pextra');
                  if (parseInt("@Praescio.Models.Common.ACCOUNT.BoardId") == 4) {
                    $scope.AssignmentTypeList = $scope.AssignmentTypeList.filter(m => m.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.PExtra)"));
                  } else {
                    if ("@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Teacher)" || "@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.Admin)") {
                      $scope.AssignmentTypeList = $scope.AssignmentTypeList.filter(m => m.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.InstitutionAssignment)"));
                    } else if ("@Praescio.Models.Common.ACCOUNT.AccountTypeId" == "@((int)Praescio.BusinessEntities.Common.AccountType.IndividualTeacher)") {
                      $scope.AssignmentTypeList = $scope.AssignmentTypeList.filter(m => m.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.IndividualAssignment)"));
                    } else {
                      $scope.AssignmentTypeList = $scope.AssignmentTypeList.filter(m => m.AssignmentTypeId == parseInt("@((int)Praescio.BusinessEntities.Common.AssignmentType.PraescioLesson)"));
                    }
                  }
                }
              }
            });

            //$scope.GetAssignmentByType = function (AssignmentTypeId) {
            //  $scope.ChangeAssignmentList();
            //}

            $scope.ChangeSubject = function (id) {
                $scope.ChangeAssignmentList();
            }

            $scope.ChangeAssignmentList = function () {
              if ($scope.AssignmentTypeId == '' || $scope.AssignmentTypeId == undefined) {
                $scope.AssignmentList = [];
                return;
              }

              var url = 'pageNo=1&itemPerPage=9999&AssignmentType=' + $scope.AssignmentTypeId + '&HidePublished=true';
              url += '&BoardId=' + ($scope.Assignment.BoardId == '' || $scope.Assignment.BoardId == undefined ? 0 : $scope.Assignment.BoardId) +
                '&MediumId=' + ($scope.Assignment.MediumId == '' || $scope.Assignment.MediumId == undefined ? 0 : $scope.Assignment.MediumId) +
                '&StandardId=' + ($scope.Assignment.StandardId == '' || $scope.Assignment.StandardId == undefined ? 0 : $scope.Assignment.StandardId) +
                '&SubjectId=' + ($scope.Assignment.SubjectId == '' || $scope.Assignment.SubjectId == undefined ? 0 : $scope.Assignment.SubjectId) +
                '&AttemptedOnly=false';
              NetworkService.get('PraescioCommon/GetAssignmentListV2?' + url).success(function (data) {
                $scope.AssignmentList = data.dataContent;
              });
            }

            $scope.ChangeAssignment = function (id) {
                NetworkService.get('PraescioCommon/GetAssignmentDetail?assignmentid=' + id).success(function (data) {
                    $scope.Assignment = data.Assignment;
                    $scope.AssignmentId(data.Assignment.StandardId);
                });
            }



            $scope.ShowHide = function () {
                $scope.IsVisible = $scope.IsVisible ? false : true;
            }

            $scope.SaveQuestion = function () {
                $scope.savingRequest = true;

                var Contentdata = jQuery.map($scope.ContentList, function (item, index) {
                   return {ContentId:item.ContentId,CategoryTypeId:item.CategoryTypeId,ContentOption: item.ContentOption, ContentAnswer: item.ContentAnswer, Checked: item.Checked };
                });

               NetworkService.insert('PraescioCommon/SaveQuestionContentToAssignment?CategoryTypeId=@ViewBag.CategoryTypeId&AssignmentId=' + $scope.AssignmentId, Contentdata).success(function (data) {
                   swal({
                       title: "@ContentString has been successfully added!!!",
                       text: "Press Ok to Continue.",
                       type: "success",
                       confirmButtonColor: "green",
                       showCancelButton: false,
                   });

                   $scope.savingRequest = false;
               }).error(function (data, status) {
                   $scope.savingRequest = false;
                   swal({
                       title: data.Message,
                       text: "Press Ok to Continue.",
                       type: "error",
                       confirmButtonColor: "red",
                       showCancelButton: false,
                   });
               });
            }

            $scope.onPageChange = function (pageno) {
                var url = '&pageNo=' + pageno + '&itemsPerPage=' + $scope.itemsPerPage;

                NetworkService.get('PraescioCommon/GetQuestionContent?CategoryTypeId=@ViewBag.CategoryTypeId' + url).success(function (data) {

                    $scope.ContentList = data.contentData;
                    $scope.totalcount = data.totalRecord;
                });
            }


        });
    </script>
}