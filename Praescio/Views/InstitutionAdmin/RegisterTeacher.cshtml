@{
    ViewBag.Title = "Teacher";
}
<style>
    .col-xs-12, .col-md-12 {
        padding-right: 0px !important;
        padding-left: 0px !important;
    }
</style>
<!-- page content -->
<div class="right_col" role="main" ng-controller="TeacherRegisterCtrl">
    <div class="">

        <div class="page-title">
            <div class="title_left">
                <h3>Registration</h3>
            </div>
            <div class="title_right">
                <div class="col-md-6 col-sm-6 col-xs-12 form-group pull-right top_search">
                    <div class="input-group">
                        <ol class="breadcrumb">
                            <li><a href="@Url.Action("Dashboard", "InstitutionAdmin")"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                            <li class="active">Teacher Registration</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="row">
            <div class="col-md-12 col-xs-12">
                <div class="x_panel">
                    <div class="x_title">
                        <h2>Teacher Registration</h2>
                        <div class="clearfix"></div>
                    </div>
                    <div class="x_content">
                        <!-- start form for validation -->
                        <form id="TeacherRegistration" name="TeacherRegistration" autocomplete="off" data-parsley-validate>

                            <div class="form-group">
                                <label for="firstname">First Name</label>
                                <input disabled="disabled" type="text" id="firstname" ng-model="Teacher.FirstName" class="form-control" name="firstname" placeholder="Enter First Name" required />
                                <p ng-show="TeacherRegistration.firstname.$invalid && (TeacherRegistration.firstname.$dirty || submitted ||TeacherRegistration.firstname.$touched )" class="text-danger">First Name is required.</p>
                            </div>
                            <div class="form-group">
                                <label for="lastname">Last Name</label>
                                <input type="text" disabled="disabled" id="lastname" ng-model="Teacher.LastName" class="form-control" name="lastname" data-parsley-trigger="change" placeholder=" Enter Last Name" required />
                                <p ng-show="TeacherRegistration.lastname.$invalid && (TeacherRegistration.lastname.$dirty || submitted ||TeacherRegistration.lastname.$touched )" class="text-danger">Last Name is required.</p>
                            </div>

                            <div class="form-group">
                                <label>Gender</label>
                                <p>
                                    Male:
                                    <input type="radio" disabled="disabled" class="flat" name="gender" id="genderM" ng-model="Teacher.Gender" ng-value="Male" checked="" required /> Female:
                                    <input type="radio" disabled="disabled" class="flat" name="gender" id="genderF"  ng-model="Teacher.Gender" ng-value="Female" />
                                </p>
                            </div>

                            <div class="form-group">
                                <label for="dob">Date Of Birth</label>
                                <input type="text" disabled="disabled" id="DateOfBirth" ng-model="Teacher.DateOfBirth" class="form-control" name="DateOfBirth" data-parsley-trigger="change" placeholder="Enter DateOfBirth" required />
                                <p ng-show="TeacherRegistration.DateOfBirth.$invalid && (TeacherRegistration.DateOfBirth.$dirty || submitted ||TeacherRegistration.DateOfBirth.$touched )" class="text-danger">DateOfBirth is required.</p>
                            </div>

                            <div class="form-group">
                                <label for="regno">Mobile Number</label>
                                <input type="text" id="MobileNo" ng-model="Teacher.MobileNo" maxlength="10" class="form-control number" name="MobileNo" data-parsley-trigger="change" placeholder="Mobile Number" required />
                                <p ng-show="TeacherRegistration.MobileNo.$invalid && (TeacherRegistration.MobileNo.$dirty || submitted ||TeacherRegistration.MobileNo.$touched )" class="text-danger">Mobile is required.</p>


                            </div>



                            <div class="form-group">
                                <label for="email">Email id</label>
                                <input type="email" id="Email" ng-model="Teacher.Email" class="form-control" name="Email" data-parsley-trigger="change" placeholder="Enter Email Id" required />
                                <p ng-show="TeacherRegistration.Email.$invalid && (TeacherRegistration.Email.$dirty || submitted ||TeacherRegistration.Email.$touched )" class="text-danger">Enter valid Email ID.</p>
                            </div>

                            <div class="form-group">
                                <label for="address">Address</label>
                                <textarea id="address" ng-model="Teacher.Address" required="required" class="form-control" name="Address" data-parsley-trigger="keyup" data-parsley-minlength="20" data-parsley-maxlength="100" data-parsley-minlength-message="Come on! You need to enter at least a 20 caracters long comment.." placeholder="Enter Address"
                                          data-parsley-validation-threshold="10"></textarea>
                            </div>

                            <div class="form-group">
                                <label for="Board">Select Board</label>
                                <select id="Board" name="Board" class="input-sm form-control" ng-model="Teacher.BoardId" ng-options="option.Id as option.BoardName for option in BoardList" ng-change="" ng-required="true">
                                    <option value="">-- Select Board --</option>
                                </select>
                                <p ng-show="TeacherRegistration.Board.$invalid && (TeacherRegistration.Board.$dirty || submitted ||TeacherRegistration.Board.$touched )" class="text-danger">Board is required</p>
                                @*<p ng-show="(TeacherRegistration.Standard.$invalid && submitted)" class="text-danger">Standard is required.</p>*@
                            </div>

                            @*@if (ViewBag.AccountId == 0)
                                {*@

                            <div class="col-md-12 col-xs-12">
                                <span class="btn btn-primary" ng-click="addstandard()">Add Standard</span>
                            </div>
                            <div class="col-md-12 col-xs-12">
                                <div ng-repeat="option in Teacher.TeacherMappingStandard" class="col-md-4 col-xs-4" style="padding:0px !important">
                                    <div class="form-group" style="padding-right:10px !important">
                                        <div>
                                            <label for="SubjectName">Select Standard</label>
                                            <select id="Standard" name="Standard" class="input-sm form-control" ng-model="option.StandardId" ng-options="option.Id as option.StandardName for option in StandardList" ng-change="ChangeStandard(option.StandardId,$index,Subject$index)" ng-init="Subject$index =[]" ng-required="true">
                                                <option value="">-- Select Standard --</option>
                                            </select>
                                        </div>
                                        <p ng-show="Teacher.Subject.length > 3 || (TeacherRegistration.Subject.$invalid && submitted)" class="text-danger">Max 3 Subject is required.</p>
                                    </div>

                                    <div class="form-group" style="padding-right:10px !important">
                                        <div>
                                            <label for="heard">Select Subject</label>
                                            <select class="input-sm form-control select2" multiple="" id="Subject{{$index}}" name="Subject{{$index}}"
                                                    data-placeholder="Select Subject" ng-required="true" ng-model="option.SubjectId">
                                                <option value=""></option>
                                                <option ng-repeat="option in Subject$index.SubjectList" value="{{option.Id}}">{{option.SubjectName}}</option>
                                            </select>
                                        </div>
                                        <p ng-show="(TeacherRegistration.Standard.$invalid && submitted)" class="text-danger">Standard is required.</p>
                                    </div>
                                </div>
                            </div>
                            @* } *@

                            <br />
                            @if (ViewBag.AccountId == 0)
                            {
                                <span class="btn btn-primary" ng-click="reset()">Reset</span>
                                <span class="btn btn-primary" ng-click="RegisterTeacher()" ng-disabled="savingRequest">
                                    Submit
                                    <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
                                </span>
                            }
                            else
                            {
                                <span class="btn btn-primary" ng-click="UpdateTeacher()" ng-disabled="savingRequest">
                                    Update
                                    <i class="fa fa-spinner fa-spin" ng-show="savingRequest"></i>
                                </span>
                            }
                        </form>
                        <!-- end form for validations -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- footer content -->
@section Scripts{

    <script type="text/javascript">


        myApp.controller('TeacherRegisterCtrl', function ($scope, $rootScope, $filter, NetworkService) {

            $scope.MediumId = '@Praescio.Models.Common.ACCOUNT.OrganizationAccount.MediumId';

            $scope.Teacher = {};
            $scope.Teacher.TeacherMappingStandard = [{
                "StandardId": null,
                "SubjectId": null
            }];

            $scope.addstandard = function () {
                $scope.Teacher.TeacherMappingStandard.push({ "StandardId": null, "SubjectId": null })
                $(".select2").trigger("chosen:updated");
                setTimeout(function () {
                    $(".select2").select2();
                }, 200)
            }

            setTimeout(function () {
                $(".select2").select2();
            }, 200)

            $scope.Teacher.Standard = [];
            $scope.Teacher.UserName = '';
            $scope.TitleName = 'Register School'

            $scope.StandardList = [{ Id: 1, StandardName: '5th' }, { Id: 2, StandardName: '6th' }, { Id: 3, StandardName: '7th' },
                               { Id: 4, StandardName: '8th' }, { Id: 5, StandardName: '9th' }, { Id: 6, StandardName: '10th' }]

            $scope.VersionType = [{ Id: 1, Name: 'Paid' }, { Id: 2, Name: 'Trail' }]


            NetworkService.get('PraescioAdmin/GetBoardList').success(function (data) {
                $scope.BoardList = data;
            });

            $scope.ChangeStandard = function (id, subid, option) {
                NetworkService.get('PraescioCommon/GetSubject?standardid=' + id + '&mediumid=' + $scope.MediumId).success(function (data) {
                    $("#Subject" + subid).select2().val('').trigger("chosen:updated");
                    option.SubjectList = data;
                });
            }

            if ('@ViewBag.AccountId' > 0) {
                NetworkService.get('PraescioCommon/GetUserRegisterationDetail?accountId=@ViewBag.AccountId').success(function (data) {
                    $scope.Teacher = data.account;
                    $scope.MediumId = data.account.OrganizationAccount.MediumId;

                    $scope.Teacher.DateOfBirth = $filter('date')($scope.Teacher.DateOfBirth, "dd/MM/yyyy");

                    $scope.Teacher.TeacherMappingStandard = [{
                        "StandardId": null,
                        "SubjectId": null
                    }];
                    $(".select2").select2();

                });
            }

            $scope.reset = function () {

                $scope.Teacher.FirstName = '';
                $scope.Teacher.LastName = '';
                $scope.Teacher.MobileNo = '';
                $scope.Teacher.DateOfBirth = '';
                $scope.Teacher.Email = '';
                $scope.Teacher.Address = '';
                $scope.Teacher.BoardId = '';

            };


            $scope.RegisterTeacher = function () {
                $scope.Teacher.Gender = $("input[name='gender']:checked").val();

                var activateDate = $scope.Teacher.ActivateDate;
                var expiredDate = $scope.Teacher.ExpiredDate;
                var DateOfBirth = $scope.Teacher.DateOfBirth;

                $scope.Teacher.DateOfBirth = ConvertDateFormat($scope.Teacher.DateOfBirth);

                if (!$scope.TeacherRegistration.$valid) {
                    $scope.submitted = true;
                }
                else {

                    $scope.savingRequest = true;

                    $scope.Teacher.IsIndividual = false;
                    $scope.Teacher.InstitutionAccountId = '@Praescio.Models.Common.ACCOUNT.InstitutionAccountId';
                    $scope.Teacher.AccountTypeId = '@Convert.ToInt16(Praescio.BusinessEntities.Common.AccountType.Teacher)'
                    var data = '{"account":' + JSON.stringify($scope.Teacher) + ',"TeacherMappingStandard":' + JSON.stringify($scope.Teacher.TeacherMappingStandard) + ',"accounttypeid":' + '@Convert.ToInt16(Praescio.BusinessEntities.Common.AccountType.Teacher)' + ',"isTeacher":' + true + '}';
                    NetworkService.insert('PraescioAdmin/RegisterTeacher', data).success(function (data) {
                        $scope.savingRequest = false;
                        $scope.Teacher.DateOfBirth = DateOfBirth;

                        swal({
                            title: "Teacher has been successfully registered!!!",
                            text: "Press Ok to Continue.",
                            type: "success",
                            confirmButtonColor: "green",
                            showCancelButton: false,
                        });

                    }).error(function (data) {
                        $scope.savingRequest = false;
                        swal({
                            title: data,
                            text: "Press Ok to Continue.",
                            type: "error",
                            confirmButtonColor: "red",
                            showCancelButton: false,
                        });
                    });
                }
            }

            $scope.UpdateTeacher = function () {

                $scope.Teacher.Gender = $("input[name='gender']:checked").val();

                if (!$scope.TeacherRegistration.$valid) {
                    $scope.submitted = true;
                }
                else {

                    $scope.savingRequest = true;

                    $scope.Teacher.IsIndividual = false;
                    $scope.Teacher.InstitutionAccountId = '@Praescio.Models.Common.ACCOUNT.InstitutionAccountId';
                    $scope.Teacher.AccountTypeId = '@Convert.ToInt16(Praescio.BusinessEntities.Common.AccountType.Teacher)'
                    var data = '{"account":' + JSON.stringify($scope.Teacher) + ',"TeacherMappingStandard":' + JSON.stringify($scope.Teacher.TeacherMappingStandard) + ',"accounttypeid":' + '@Convert.ToInt16(Praescio.BusinessEntities.Common.AccountType.Teacher)' + ',"isTeacher":' + true + '}';
                    NetworkService.insert('PraescioAdmin/UpdateTeacher', data).success(function (data) {
                        $scope.savingRequest = false;

                        swal({
                            title: "Teacher has been successfully updated!!!",
                            text: "Press Ok to Continue.",
                            type: "success",
                            confirmButtonColor: "green",
                            showCancelButton: false,
                        });

                    }).error(function (data) {
                        $scope.savingRequest = false;
                        swal({
                            title: data,
                            text: "Press Ok to Continue.",
                            type: "error",
                            confirmButtonColor: "red",
                            showCancelButton: false,
                        });
                    });
                }
            }

            $(".select2").select2();

            var pickerDefault = new Pikaday(
            {
                field: document.getElementById('ActivateDate'),
                format: 'DD/MM/YYYY',
                minDate: new Date()
            });
            var pickerDefault = new Pikaday(
            {
                field: document.getElementById('ExpiredDate'),
                format: 'DD/MM/YYYY',
                minDate: new Date()
            });

            var date = new Date();
            date.setDate(date.getDate());
            date.setFullYear(date.getFullYear() - 18);

            var datepicker = $.fn.datepicker.noConflict();
            $.fn.bootstrapDP = datepicker;

            $("#DateOfBirth").bootstrapDP({
                endDate: date,
                format: "dd/mm/yyyy",
                autoclose: true,
                pickerPosition: "bottom-left"
            }).change(function () {

                var age = CalcAge(ConvertDateFormat($(this).val()), '#DateOfBirth');
                if (age < 18) {
                    $("#DateOfBirth").val('');
                    $.alert('Age is less than 18.');
                }
            });


        });
    </script>
}
